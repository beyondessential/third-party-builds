name: Build and upload podman to S3 (arm64)

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - .github/workflows/podman-arm64.yml

permissions:
  id-token: write
  attestations: write

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

env:
  GO_VERSION: 1.22
  PODMAN_VERSION: 5.1.1

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: Linux-ARM64
            name: aarch64-unknown-linux-gnu
            goos: linux
            goarch: arm64
            debarch: arm64

    runs-on: ${{ matrix.os }}
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
    steps:
      - name: Checkout podman source
        uses: actions/checkout@v4
        with:
          repository: containers/podman
          ref: v${{ env.PODMAN_VERSION }}

      - run: sudo sysctl kernel.unprivileged_userns_clone=1

      - name: Write script
        run: |
          cat <<EOFSCRIPT >build.sh
          #!/bin/bash
          set -euxo pipefail
          echo ::group::Install dependencies
          apt update
          apt install -y \
            btrfs-progs \
            build-essential \
            conmon \
            crun \
            git \
            golang-go \
            go-md2man \
            iptables \
            libapparmor-dev \
            libassuan-dev \
            libbtrfs-dev \
            libc6-dev \
            libdevmapper-dev \
            libglib2.0-dev \
            libgpgme-dev \
            libgpg-error-dev \
            libprotobuf-dev \
            libprotobuf-c-dev \
            libseccomp-dev \
            libselinux1-dev \
            libsystemd-dev \
            netavark \
            pkg-config \
            uidmap \
            zstd
          echo ::endgroup::

          echo ::group::Build podman
          git config --global --add safe.directory /build
          make BUILDTAGS="apparmor cni seccomp systemd exclude_graphdriver_devicemapper" PREFIX=/usr
          mkdir podman-${{ matrix.name }}-${{ env.PODMAN_VERSION }}
          make DESTDIR=/build/podman-${{ matrix.name }}-${{ env.PODMAN_VERSION }} install
          tar -caf podman-${{ matrix.name }}-${{ env.PODMAN_VERSION }}.tar.zst podman-${{ matrix.name }}-${{ env.PODMAN_VERSION }}
          echo ::endgroup::

          echo ::group::Make deb
          mkdir -p podman-${{ matrix.name }}-${{ env.PODMAN_VERSION }}/DEBIAN
          cat <<EOF > podman-${{ matrix.name }}-${{ env.PODMAN_VERSION }}/DEBIAN/control
          Package: podman
          Version: ${{env.PODMAN_VERSION}}
          Architecture: ${{ matrix.debarch }}
          Priority: optional
          Section: universe/admin
          Maintainer: BES <support@bes.au>
          Bugs: https://github.com/containers/podman/issues
          Depends: conmon, crun | runc, golang-github-containers-common, libc6 (>= 2.38), libdevmapper1.02.1 (>= 2:1.02.97), libgpgme11t64 (>= 1.4.1), libseccomp2 (>= 2.5.0), libsqlite3-0 (>= 3.36.0), libsubid4 (>= 1:4.11.1)
          Recommends: buildah (>= 1.31), catatonit | tini | dumb-init, dbus-user-session, passt, slirp4netns, uidmap
          Suggests: containers-storage, docker-compose, podman-compose, iptables
          Homepage: https://github.com/containers/podman
          Description: tool to manage containers and pods
          EOF
          dpkg-deb --root-owner-group -b podman-${{ matrix.name }}-${{ env.PODMAN_VERSION }}
          echo ::endgroup::
          EOFSCRIPT

      - name: Run container
        run: |
          echo ::group::Install docker
          sudo apt update && sudo apt install -y docker.io
          echo ::endgroup::
          sudo docker run --rm -v $(pwd):/build -w /build ubuntu:24.04 \
            bash build.sh

      - uses: actions/attest-build-provenance@v1
        with:
          subject-path: podman-${{ matrix.name }}-${{ env.PODMAN_VERSION }}.*
      - uses: actions/upload-artifact@v4
        with:
          name: podman-${{ matrix.name }}-${{ env.PODMAN_VERSION }}
          path: podman-${{ matrix.name }}-${{ env.PODMAN_VERSION }}.*
          if-no-files-found: error

  upload:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write #Â OIDC token for AWS login
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: podman-*
          merge-multiple: true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ap-southeast-2
          role-to-assume: arn:aws:iam::143295493206:role/gha-ops-scripts-s3
          role-session-name: GHA@Ops=Podman

      - name: Upload
        run: |
          for f in podman-*; do
            aws s3 cp $f s3://bes-ops-tools/podman/${{ env.PODMAN_VERSION }}/$f --no-progress
          done

      - name: Clear cache
        run: aws cloudfront create-invalidation --distribution-id=EDAG0UBS1MN74 --paths '/podman/*'
